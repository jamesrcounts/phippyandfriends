name: 0.1.$(Rev:r)

trigger:
  batch: true
  paths:
    include:
      - captainkube
  branches:
    include:
      - master


variables:
  projectName: captainkube
  registryServerName: '$(registryName).azurecr.io'
  imageName: '$(projectName)'
  registryName: containerpipelinesdemoacr
  helmVersion: '2.15.2'

stages:
  - stage: Build
    displayName: 'Build and Deploy Image and Chart'
    jobs:
      - job: Build

        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - checkout: self
            fetchDepth: 1

          - task: Docker@2
            displayName: 'Build Docker Image'
            inputs:
              containerRegistry: 'ACR'
              repository: '$(imageName)'
              command: 'build'
              Dockerfile: 'captainkube/Dockerfile'
              buildContext: 'captainkube'
              tags: '$(Build.BuildNumber)'


          - task: Docker@2
            displayName: 'Push Docker Image'
            inputs:
              containerRegistry: 'ACR'
              repository: '$(imageName)'
              command: 'push'
              tags: '$(Build.BuildNumber)'

          - task: HelmInstaller@1
            displayName: 'Install Helm'
            inputs:
              helmVersionToInstall: '$(helmVersion)'

          - task: HelmDeploy@0
            displayName: 'Package Helm Chart'
            inputs:
              command: 'package'
              chartPath: 'captainkube/charts/captainkube'
              chartVersion: '$(Build.BuildNumber)'
              save: false

          - task: AzureCLI@2
            displayName: 'Push Helm Chart'
            inputs:
              azureSubscription: 'AzureMSDN'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az acr helm push \
                  --name $(registryName) \
                  $(Build.ArtifactStagingDirectory)/$(imageName)-$(Build.BuildNumber).tgz

  - stage:
    displayName: Deploy to DEV
    jobs:
      - deployment: Dev
        displayName: Deploy to Dev Environment
        pool:
          vmImage: 'ubuntu-latest'
        environment: dev.apps
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: HelmInstaller@1
                  displayName: 'Install Helm'
                  inputs:
                    helmVersionToInstall: '$(helmVersion)'

                - task: HelmDeploy@0
                  displayName: 'Initialize Helm'
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscription: 'AzureMSDN'
                    azureResourceGroup: 'container-pipelines-demo'
                    kubernetesCluster: 'dev-container-demo'
                    useClusterAdmin: true
                    command: 'init'
                    arguments: '--service-account tiller --force-upgrade'

                - task: AzureCLI@2
                  displayName: 'Add ACR to Helm Repository list'
                  inputs:
                    azureSubscription: 'AzureMSDN'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: 'az acr helm repo add --name $(registryName)'
                    failOnStandardError: true

                - task: HelmDeploy@0
                  displayName: 'Helm Deploy'
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscription: 'AzureMSDN'
                    azureResourceGroup: 'container-pipelines-demo'
                    kubernetesCluster: 'dev-container-demo'
                    useClusterAdmin: true
                    namespace: 'apps'
                    command: 'upgrade'
                    chartType: 'Name'
                    chartName: '$(registryName)/$(imageName)'
                    releaseName: '$(imageName)'
                    overrideValues: 'image.tag=$(Build.BuildNumber),image.repository=$(registryName).azurecr.io/$(imageName)'
                    force: true

  - stage:
    displayName: Deploy to PROD
    jobs:
      - deployment: Prod
        displayName: Deploy to Prod Environment
        pool:
          vmImage: 'ubuntu-latest'
        environment: prod.apps
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: HelmInstaller@1
                  displayName: 'Install Helm'
                  inputs:
                    helmVersionToInstall: '$(helmVersion)'

                - task: HelmDeploy@0
                  displayName: 'Initialize Helm'
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscription: 'AzureMSDN'
                    azureResourceGroup: 'container-pipelines-demo'
                    kubernetesCluster: 'prod-container-demo'
                    useClusterAdmin: true
                    command: 'init'
                    arguments: '--service-account tiller --force-upgrade'

                - task: AzureCLI@2
                  displayName: 'Add ACR to Helm Repository list'
                  inputs:
                    azureSubscription: 'AzureMSDN'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: 'az acr helm repo add --name $(registryName)'
                    failOnStandardError: true

                - task: HelmDeploy@0
                  displayName: 'Helm Deploy'
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscription: 'AzureMSDN'
                    azureResourceGroup: 'container-pipelines-demo'
                    kubernetesCluster: 'prod-container-demo'
                    useClusterAdmin: true
                    namespace: 'apps'
                    command: 'upgrade'
                    chartType: 'Name'
                    chartName: '$(registryName)/$(imageName)'
                    releaseName: '$(imageName)'
                    overrideValues: 'image.tag=$(Build.BuildNumber),image.repository=$(registryName).azurecr.io/$(imageName)'
                    force: true
