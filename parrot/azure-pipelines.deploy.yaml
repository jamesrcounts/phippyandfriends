name: 0.1.$(Rev:r)

resources:
  pipelines:
    - pipeline: build
      source: 'lifecycle-demo-docker'
      trigger: true
      branch: master
    - pipeline: helm
      source: 'lifecycle-demo-helm'
      trigger: true
      branch: master

trigger:
  batch: true
  paths:
    include:
      - parrot/azure-pipelines.deploy.yaml
  branches:
    include:
      - master

variables:
  helmVersion: 3.0.2
  aksHost: westus2.cloudapp.azure.com
  containerRepository: parrot
  containerRegistry: containerpipelinesdemoacr
  imageTag: $(resources.pipeline.build.runName)

stages:
  - stage:
    displayName: Deploy to DEV
    variables:
      aksHostDev: dev-container-demo.$(aksHost)
    jobs:
      - deployment: Dev
        displayName: Deploy to Dev Environment
        pool:
          vmImage: 'ubuntu-latest'
        environment: dev.apps
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: HelmInstaller@1
                  displayName: 'Install Helm'
                  inputs:
                    helmVersionToInstall: '$(helmVersion)'

                - task: AzureCLI@2
                  displayName: 'Add ACR to Helm Repository list'
                  inputs:
                    azureSubscription: 'AzureMSDN'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: 'az acr helm repo add --name $(containerRegistry)'
                    failOnStandardError: true

                - task: HelmDeploy@0
                  displayName: 'Helm Deploy'
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscription: 'AzureMSDN'
                    azureResourceGroup: 'container-pipelines-demo'
                    kubernetesCluster: 'dev-container-demo'
                    useClusterAdmin: true
                    namespace: 'apps'
                    command: 'upgrade'
                    chartType: 'Name'
                    chartName: '$(containerRegistry)/$(containerRepository)'
                    releaseName: '$(containerRepository)'
                    overrideValues: 'ingress.basedomain=$(aksHostDev),image.tag=$(imageTag),image.repository=$(containerRegistry).azurecr.io/$(containerRepository)'


  - stage:
    displayName: Deploy to PROD
    jobs:
      - deployment: Prod
        displayName: Deploy to Prod Environment
        variables:
          aksHostProd: prod-container-demo.$(aksHost)
        pool:
          vmImage: 'ubuntu-latest'
        environment: prod.apps
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: HelmInstaller@1
                  displayName: 'Install Helm'
                  inputs:
                    helmVersionToInstall: '$(helmVersion)'

                - task: AzureCLI@2
                  displayName: 'Add ACR to Helm Repository list'
                  inputs:
                    azureSubscription: 'AzureMSDN'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: 'az acr helm repo add --name $(containerRegistry)'
                    failOnStandardError: true

                - task: HelmDeploy@0
                  displayName: 'Helm Deploy'
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscription: 'AzureMSDN'
                    azureResourceGroup: 'container-pipelines-demo'
                    kubernetesCluster: 'prod-container-demo'
                    useClusterAdmin: true
                    namespace: 'apps'
                    command: 'upgrade'
                    chartType: 'Name'
                    chartName: '$(containerRegistry)/$(containerRepository)'
                    releaseName: '$(containerRepository)'
                    overrideValues: 'ingress.basedomain=$(aksHostProd),image.tag=$(imageTag),image.repository=$(containerRegistry).azurecr.io/$(containerRepository)'
