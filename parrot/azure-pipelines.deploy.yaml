name: 0.2.$(Rev:r)

resources:
  pipelines:
    - pipeline: build
      source: 'parrot_docker'
      trigger: true
      branch: azureaiconf.6.21
    - pipeline: helm
      source: 'parrot_helm'
      trigger: true
      branch: azureaiconf.6.21

trigger:
  batch: true
  paths:
    include:
      - parrot/azure-pipelines.deploy.yaml
  branches:
    include:
      - main

variables:
  - group: acr
  - name: containerRepository
    value: parrot
  - name: aksHost
    value: jamesrcounts.com
  - name: imageTag
    value: $(resources.pipeline.build.runName)
  - name: chartTag
    value: $(resources.pipeline.helm.runName)
  - name: HELM_EXPERIMENTAL_OCI
    value: 1
  - name: namespace
    value: charts
  - name: artifact
    value: "$(LOGIN_SERVER)/$(namespace)/$(containerRepository):$(chartTag)"

stages:
  - stage:
    displayName: Deploy to DEV
    variables:
      aksHostDev: boss-crawdad-dev.$(aksHost)
    jobs:
      - deployment: Dev
        displayName: Deploy to Dev Environment
        pool:
          vmImage: 'ubuntu-latest'
        environment: kubernetes-dev.apps
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: HelmInstaller@1
                  displayName: 'Install Helm'
                  inputs:
                    helmVersionToInstall: 'latest'

                - task: AzureCLI@2
                  displayName: 'Prepare Deployment'
                  env:
                    AKS_RG: $(AZURE_ENV_RG)
                    REGISTRY_SERVER: $(LOGIN_SERVER)
                  inputs:
                    addSpnToEnvironment: true
                    azureSubscription: 'Azure'
                    failOnStandardError: true
                    scriptLocation: 'inlineScript'
                    scriptType: 'bash'
                    inlineScript: |
                      set -euo pipefail

                      helm version

                      echo "Login to AKS"
                      az aks get-credentials \
                        --resource-group ${AKS_RG} \
                        --name 'aks-boss-crawdad-dev' \
                        --admin \
                        --overwrite-existing

                      echo "Sanity Check"
                      helm list -A

                      echo "Registry Login"
                      echo $servicePrincipalKey | \
                        helm registry login ${REGISTRY_SERVER} \
                          --username $servicePrincipalId \
                          --password-stdin

                      echo "Retrieve Artifact"
                      helm chart pull $(artifact)

                      echo "Unpack Artifact"
                      CHART_PATH="$(containerRepository)-$(chartTag)"
                      helm chart export "$(artifact)" --destination ./${CHART_PATH}

                      echo "Sanity Check"
                      helm show chart ./${CHART_PATH}/$(containerRepository)

                - task: HelmDeploy@0
                  displayName: 'Helm Deploy'
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscription: 'Azure'
                    azureResourceGroup: 'rg-boss-crawdad'
                    kubernetesCluster: 'aks-boss-crawdad-dev'
                    useClusterAdmin: true
                    namespace: 'apps'
                    command: 'upgrade'
                    chartType: 'Name'
                    chartName: '$(CONTAINER_REGISTRY_NAME)/$(containerRepository)'
                    releaseName: '$(containerRepository)'
                    overrideValues: 'ingress.basedomain=$(aksHostDev),image.tag=$(imageTag),image.repository=$(CONTAINER_REGISTRY_NAME).azurecr.io/$(containerRepository)'


  - stage:
    displayName: Deploy to PROD
    jobs:
      - deployment: Prod
        displayName: Deploy to Prod Environment
        variables:
          aksHostProd: boss-crawdad-prd.$(aksHost)
        pool:
          vmImage: 'ubuntu-latest'
        environment: kubernetes-prd.apps
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: HelmInstaller@1
                  displayName: 'Install Helm'
                  inputs:
                    helmVersionToInstall: 'latest'

                - task: AzureCLI@2
                  displayName: 'Add ACR to Helm Repository list'
                  inputs:
                    azureSubscription: 'Azure'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: 'az acr helm repo add --name $(CONTAINER_REGISTRY_NAME)'
                    failOnStandardError: true

                - task: HelmDeploy@0
                  displayName: 'Helm Deploy'
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscription: 'Azure'
                    azureResourceGroup: 'rg-boss-crawdad'
                    kubernetesCluster: 'aks-boss-crawdad-prd'
                    useClusterAdmin: true
                    namespace: 'apps'
                    command: 'upgrade'
                    chartType: 'Name'
                    chartName: '$(CONTAINER_REGISTRY_NAME)/$(containerRepository)'
                    releaseName: '$(containerRepository)'
                    overrideValues: 'ingress.basedomain=$(aksHostProd),image.tag=$(imageTag),image.repository=$(CONTAINER_REGISTRY_NAME).azurecr.io/$(containerRepository)'
