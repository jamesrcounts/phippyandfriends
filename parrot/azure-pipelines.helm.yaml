name: 0.1.$(Rev:r)

trigger:
  batch: true
  paths:
    include:
      - parrot/src/parrot/charts
      - parrot/azure-pipelines.helm.yaml
    exclude:
      - parrot/azure-pipelines.deploy.yml
      - parrot/azure-pipelines.docker.yml
  branches:
    include:
      - master

variables:
  - group: acr
  - name: containerRepository
    value: parrot
  - name: namespace
    value: charts
  - name: HELM_EXPERIMENTAL_OCI
    value: 1
  - name: artifact
    value: "$(LOGIN_SERVER)/$(namespace)/$(containerRepository):$(Build.BuildNumber)"
  - name: chart_path
    value: parrot/src/parrot/charts/parrot

stages:
  - stage: Build
    displayName: 'Package Helm Chart'
    jobs:
      - job: Helm
        displayName: 'Build and Push Helm Chart'
        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - checkout: self
            fetchDepth: 1

          - task: HelmInstaller@1
            displayName: 'Initialize Helm'
            inputs:
              helmVersionToInstall: 'latest'

          - task: Bash@3
            displayName: 'Check Helm Chart'
            inputs:
              targetType: 'inline'
              script: |
                set -euo pipefail

                helm lint $(chart_path) --strict

          - task: Bash@3
            displayName: 'Save Helm Chart'
            inputs:
              targetType: 'inline'
              script: |
                set -euo pipefail

                helm chart save $(chart_path) $(artifact)

          - task: AzureCLI@2
            condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
            displayName: 'Push Helm Chart'
            inputs:
              addSpnToEnvironment: true
              azureSubscription: 'Azure'
              scriptLocation: 'inlineScript'
              scriptType: 'bash'
              inlineScript: |
                set -euo pipefail

                echo $servicePrincipalKey | \
                  helm registry login $(LOGIN_SERVER) \
                    --username $servicePrincipalId \
                    --password-stdin

                helm chart push $(artifact)
